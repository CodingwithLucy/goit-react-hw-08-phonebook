{"version":3,"file":"static/js/330.c9050ac3.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","../node_modules/nanoid/url-alphabet/index.js","components/ContactList/ContactList.jsx","../node_modules/nanoid/index.browser.js","pages/Contacts.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../contactsSlice.js';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    dispatch(addContact({ name, number }));\n    try {\n      const response = await axios.post(\n        'https://connections-api.herokuapp.com/api/contacts',\n        { name, number }\n      );\n      console.log('Contact added successfully:', response.data);\n    } catch (error) {\n      console.error('Error adding contact:', error.message);\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form-all\">\n      <label>\n        NAME\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          className=\"form-style\"\n        />\n      </label>\n\n      <label>\n        NUMBER\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          className=\"form-style\"\n        />\n      </label>\n\n      <button type=\"submit\">ADD NEW CONTACT</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../contactsSlice.js';\n\nconst Filter = () => {\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label>\n      FIND CONTACT BY NAME\n      <input type=\"text\" value={filter} onChange={handleFilterChange} />\n    </label>\n  );\n};\n\nexport default Filter;\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts, deleteContact } from '../contactsSlice.js';\nimport { nanoid } from 'nanoid';\nimport axios from 'axios';\n\nconst ContactList = () => {\n  const contacts = useSelector(state => state.contacts.contacts);\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.contacts.filter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = Array.isArray(contacts)\n    ? contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      )\n    : [];\n\n  const handleDelete = async contactId => {\n    dispatch(deleteContact(contactId));\n    try {\n      await axios.delete(\n        `https://connections-api.herokuapp.com/api/contacts/${contactId}`\n      );\n      console.log('Contact deleted successfully:', contactId);\n    } catch (error) {\n      console.error('Error deleting contact:', error.message);\n    }\n  };\n\n  return (\n    <div>\n      <ul className=\"contact-list\">\n        {filteredContacts.map(contact => (\n          <li key={nanoid()} className=\"contact-list-item\">\n            {contact.name}: {contact.number}\n            <button onClick={() => handleDelete(contact.id)}>DELETE</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","import React from 'react';\nimport ContactForm from '../components/ContactForm/ContactForm.jsx';\nimport Filter from '../components/Filter/Filter.jsx';\nimport ContactList from '../components/ContactList/ContactList.jsx';\n\nconst Contacts = () => {\n  return (\n    <div>\n      <h1>PHONEBOOK</h1>\n      <ContactForm />\n      <h2>CONTACT LIST</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","handleChange","e","_e$target","target","value","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","preventDefault","addContact","axios","sent","console","log","data","t0","error","message","reset","stop","_x","apply","arguments","_jsxs","onSubmit","className","children","_jsx","type","onChange","filter","useSelector","state","contacts","setFilter","urlAlphabet","useEffect","fetchContacts","filteredContacts","Array","isArray","contact","toLowerCase","includes","handleDelete","contactId","deleteContact","concat","map","onClick","id","size","length","undefined","bytes","crypto","getRandomValues","Uint8Array","scopedUrlAlphabet","nanoid","ContactForm","Filter","ContactList"],"sourceRoot":""}