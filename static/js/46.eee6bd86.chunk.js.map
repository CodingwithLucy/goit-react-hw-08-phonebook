{"version":3,"file":"static/js/46.eee6bd86.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","redux/contacts/selectors.js","../node_modules/nanoid/url-alphabet/index.js","components/ContactList/ContactList.jsx","../node_modules/nanoid/index.browser.js","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","pages/ContactsApp.js"],"sourcesContent":["import {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from '../../redux/contacts/contactsSlice.js';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport React from 'react';\n\nconst ContactForm = () => {\n  const { data } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const isNewName = (contacts, contactName) => {\n    if (contacts.some(({ name }) => name === contactName)) {\n      alert(`${contactName} is already in contacts`);\n      return false;\n    }\n    return true;\n  };\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit: (values, { resetForm }) => {\n      if (isNewName(data, values.name)) {\n        addContact({ name: values.name.trim(), number: values.number.trim() });\n        resetForm();\n      }\n    },\n    validationSchema: schema,\n  });\n\n  const isDisabled = !(formik.isValid && formik.dirty);\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <div>\n        <input\n          autoComplete=\"off\"\n          placeholder=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          onChange={formik.handleChange}\n          value={formik.values.name}\n          required\n        />\n        {formik.errors.name && formik.touched.name ? (\n          <span>{formik.errors.name}</span>\n        ) : null}\n      </div>\n      <div>\n        <input\n          autoComplete=\"off\"\n          placeholder=\"Phone\"\n          type=\"tel\"\n          name=\"number\"\n          onChange={formik.handleChange}\n          value={formik.values.number}\n        />\n        {formik.errors.number && formik.touched.number ? (\n          <span>{formik.errors.number}</span>\n        ) : null}\n      </div>\n      <center>\n        <button type=\"submit\" disabled={isDisabled}>\n          {isLoading ? 'Adding contact...' : 'Add contact'}\n        </button>\n      </center>\n    </form>\n  );\n};\n\nconst pattern = {\n  str: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n  number: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n};\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(pattern.str, 'Name must be a string')\n    .min(3, 'Too short, minimum length: 3')\n    .max(20, 'Too long, maximum length: 20')\n    .required(),\n  number: yup.number().typeError().moreThan(12).required(),\n});\n\nexport default ContactForm;\n","export const selectFilter = state => state.filter;\nexport const selectContacts = state => state.contacts.queries;\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import React from 'react';\nimport { selectFilter } from '../../redux/contacts/selectors.js';\nimport { useGetContactsQuery } from '../../redux/contacts/contactsSlice.js';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { useDeleteContactMutation } from '../../redux/contacts/contactsSlice.js';\n\nconst contactsFiltration = (contacts = [], filter = '') => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(\n    ({ name, number }) =>\n      name.toLowerCase().includes(normalizedFilter) ||\n      number.includes(normalizedFilter)\n  );\n};\n\nconst ContactList = () => {\n  const filter = useSelector(selectFilter);\n  const { data, isLoading } = useGetContactsQuery();\n  const contacts = contactsFiltration(data, filter);\n  const [deleteContact] = useDeleteContactMutation();\n\n  const handleDelete = id => {\n    deleteContact(id);\n  };\n\n  if (isLoading) {\n    return <h2 style={{ textAlign: 'center' }}>loading...</h2>;\n  }\n\n  return (\n    <>\n      {isLoading && <h2>loading...</h2>}\n      <table style={{ marginTop: '20px' }}>\n        <thead>\n          <tr>\n            <th>Contact name</th>\n            <th>Phone number</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {contacts.map(({ id, name, number }) => (\n            <tr key={nanoid()}>\n              <td>{name}</td>\n              <td>{number}</td>\n              <td>\n                <button onClick={() => handleDelete(id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default ContactList;\n","import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { toFilter } from '../../redux/contacts/filterSlice.js';\nimport { selectFilter } from '../../redux/contacts/selectors.js';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handelFilterChange = e => {\n    dispatch(toFilter(e.target.value));\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <span>Find your contact</span>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handelFilterChange}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useGetContactsQuery } from '../../redux/contacts/contactsSlice.js';\nimport ContactList from '../ContactList/ContactList.jsx';\nimport Filter from '../Filter/Filter.jsx';\n\nconst Contacts = () => {\n  const { data = [], isFetching } = useGetContactsQuery();\n\n  if (data.length <= 0) {\n    return (\n      <div style={{ width: '45%', border: 'none' }}>\n        <h2>Please, add first contact</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ minWidth: '600px', maxWidth: '45%' }}>\n      <div\n        style={{\n          width: '100%',\n          padding: '20px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          gap: '30px',\n        }}\n      >\n        <h2>Contacts</h2>\n        <div>{data.length} contacts total</div>\n        {isFetching && (\n          <div\n            style={{\n              color: 'grey',\n              position: 'absolute',\n              right: '50%',\n              transform: 'translate(50%,30%)',\n            }}\n          >\n            Loading...\n          </div>\n        )}\n      </div>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n","import React from 'react';\nimport ContactForm from '../components/ContactForm/ContactForm.jsx';\nimport Contacts from '../components/Contacts/Contacts.jsx';\n\nconst ContactsApp = () => {\n  return (\n    <section>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-around',\n          backgroundColor: 'rgba(255, 255, 255, 0.5)',\n        }}\n      >\n        <ContactForm />\n        <Contacts />\n      </div>\n    </section>\n  );\n};\n\nexport default ContactsApp;\n"],"names":["initialValues","name","number","schema","yup","shape","matches","min","max","required","typeError","moreThan","data","useGetContactsQuery","_useAddContactMutatio","useAddContactMutation","_useAddContactMutatio2","_slicedToArray","addContact","isLoading","formik","useFormik","onSubmit","values","_ref2","contacts","contactName","resetForm","some","_ref","alert","concat","trim","validationSchema","isDisabled","isValid","dirty","_jsxs","handleSubmit","children","_jsx","autoComplete","placeholder","type","onChange","handleChange","value","errors","touched","disabled","selectFilter","state","filter","urlAlphabet","useSelector","_useGetContactsQuery","arguments","length","undefined","normalizedFilter","toLowerCase","includes","contactsFiltration","_useDeleteContactMuta","useDeleteContactMutation","deleteContact","style","textAlign","_Fragment","marginTop","map","id","onClick","handleDelete","size","bytes","crypto","getRandomValues","Uint8Array","scopedUrlAlphabet","nanoid","dispatch","useDispatch","display","justifyContent","alignItems","e","toFilter","target","_useGetContactsQuery$","isFetching","width","border","minWidth","maxWidth","padding","gap","color","position","right","transform","Filter","ContactList","backgroundColor","ContactForm","Contacts"],"sourceRoot":""}