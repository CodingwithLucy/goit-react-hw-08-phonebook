{"version":3,"file":"static/js/665.7fd48647.chunk.js","mappings":"iPAMMA,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAENC,EAASC,EAAAA,KAAaC,MAAM,CAChCL,KAAMI,EAAAA,KAEHE,IAAI,EAAG,oBACPC,IAAI,GAAI,oBACRC,SAAS,wBACZP,MAAOG,EAAAA,KAEJH,MAAM,uCACNO,SAAS,qBACZN,SAAUE,EAAAA,KAEPI,SAAS,yBACTF,IAAI,EAAG,wDAsEZ,EAnEqB,WACnB,IAAMG,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBb,cAAAA,EACAc,SAAU,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UACnBP,GAASQ,EAAAA,EAAAA,IAASH,IAClBE,GACF,EACAE,iBAAkBf,IAGdgB,IAAeR,EAAOS,SAAWT,EAAOU,OAE9C,OACEC,EAAAA,EAAAA,MAAA,QAAMC,YAAU,EAACC,aAAa,MAAMX,SAAUF,EAAOc,aAAaC,SAAA,EAChEC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,aAAc,OAAQC,cAAe,aAAcJ,SAAC,cAIjEJ,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,SACEnB,UAAQ,EACRuB,KAAK,OACL/B,KAAK,OACLgC,SAAUrB,EAAOsB,aACjBC,MAAOvB,EAAOG,OAAOd,OAEtBW,EAAOwB,OAAOnC,MAAQW,EAAOyB,QAAQpC,MACpC2B,EAAAA,EAAAA,KAAA,QAAAD,SAAOf,EAAOwB,OAAOnC,OACnB,SAGNsB,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,SACEnB,UAAQ,EACRuB,KAAK,OACL/B,KAAK,QACLgC,SAAUrB,EAAOsB,aACjBC,MAAOvB,EAAOG,OAAOb,QAEtBU,EAAOwB,OAAOlC,OAASU,EAAOyB,QAAQnC,OACrC0B,EAAAA,EAAAA,KAAA,QAAAD,SAAOf,EAAOwB,OAAOlC,QACnB,SAGNqB,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,SACEnB,UAAQ,EACRuB,KAAK,WACLP,aAAa,mBACbxB,KAAK,WACLgC,SAAUrB,EAAOsB,aACjBC,MAAOvB,EAAOG,OAAOZ,WAEtBS,EAAOwB,OAAOjC,UAAYS,EAAOyB,QAAQlC,UACxCyB,EAAAA,EAAAA,KAAA,QAAAD,SAAOf,EAAOwB,OAAOjC,WACnB,SAGNyB,EAAAA,EAAAA,KAAA,UAAQI,KAAK,SAASM,SAAUlB,EAAWO,SAAC,aAKlD,EC9EA,EAXiB,WACf,OACEJ,EAAAA,EAAAA,MAAA,WAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAM3B,KAAK,cAAcsC,QAAQ,uCACjCX,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACY,EAAY,QAIrB,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport { register } from '../../redux/auth/operations.js';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'to short, min: 3')\n    .max(20, 'to long, max: 20')\n    .required('Username is required'),\n  email: yup\n    .string()\n    .email('Email must be a valid email address')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .required('No password provided.')\n    .min(7, 'Password is too short - should be 8 chars minimum.'),\n});\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit: (values, { resetForm }) => {\n      dispatch(register(values));\n      resetForm();\n    },\n    validationSchema: schema,\n  });\n\n  const isDisabled = !(formik.isValid && formik.dirty);\n\n  return (\n    <form noValidate autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n      <h3 style={{ marginBottom: '30px', textTransform: 'uppercase' }}>\n        Register\n      </h3>\n\n      <div>\n        <input\n          required\n          type=\"text\"\n          name=\"name\"\n          onChange={formik.handleChange}\n          value={formik.values.name}\n        />\n        {formik.errors.name && formik.touched.name ? (\n          <span>{formik.errors.name}</span>\n        ) : null}\n      </div>\n\n      <div>\n        <input\n          required\n          type=\"text\"\n          name=\"email\"\n          onChange={formik.handleChange}\n          value={formik.values.email}\n        />\n        {formik.errors.email && formik.touched.email ? (\n          <span>{formik.errors.email}</span>\n        ) : null}\n      </div>\n\n      <div>\n        <input\n          required\n          type=\"password\"\n          autoComplete=\"current-password\"\n          name=\"password\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n        />\n        {formik.errors.password && formik.touched.password ? (\n          <span>{formik.errors.password}</span>\n        ) : null}\n      </div>\n\n      <button type=\"submit\" disabled={isDisabled}>\n        Create\n      </button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport RegisterForm from '../components/RegisterForm/RegisterForm.jsx';\n\nconst Register = () => {\n  return (\n    <section>\n      <meta name=\"description\" content=\"You can register using your email\" />\n      <div>\n        <RegisterForm />\n      </div>\n    </section>\n  );\n};\n\nexport default Register;\n"],"names":["initialValues","name","email","password","schema","yup","shape","min","max","required","dispatch","useDispatch","formik","useFormik","onSubmit","values","_ref","resetForm","register","validationSchema","isDisabled","isValid","dirty","_jsxs","noValidate","autoComplete","handleSubmit","children","_jsx","style","marginBottom","textTransform","type","onChange","handleChange","value","errors","touched","disabled","content","RegisterForm"],"sourceRoot":""}