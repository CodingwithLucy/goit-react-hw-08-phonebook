{"version":3,"file":"static/js/690.041e1c1c.chunk.js","mappings":"iPAMMA,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,KAAaC,MAAM,CAChCJ,MAAOG,EAAAA,KAEJH,MAAM,uCACNK,SAAS,qBACZJ,SAAUE,EAAAA,KAEPE,SAAS,yBACTC,IAAI,EAAG,wDAyEZ,EAtEkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBX,cAAAA,EACAY,SAAU,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UACnBP,GAASQ,EAAAA,EAAAA,IAAMH,IACfE,GACF,EACAE,iBAAkBd,IAGde,IAAeR,EAAOS,SAAWT,EAAOU,OAC9C,OACEC,EAAAA,EAAAA,MAAA,QACEC,UAAU,OACVC,YAAU,EACVC,aAAa,MACbZ,SAAUF,EAAOe,aAAaC,SAAA,EAE9BC,EAAAA,EAAAA,KAAA,MACEC,MAAO,CACLC,aAAc,OACdC,UAAW,SACXC,cAAe,aACfL,SACH,YAIDC,EAAAA,EAAAA,KAAA,OAAAD,UACEL,EAAAA,EAAAA,MAAA,SAAAK,SAAA,CAAO,SAELC,EAAAA,EAAAA,KAAA,SACErB,UAAQ,EACR0B,KAAK,QACLC,KAAK,QACLC,SAAUxB,EAAOyB,aACjBC,MAAO1B,EAAOG,OAAOZ,QAEtBS,EAAO2B,OAAOpC,OAASS,EAAO4B,QAAQrC,OACrC0B,EAAAA,EAAAA,KAAA,QAAAD,SAAOhB,EAAO2B,OAAOpC,QACnB,WAIR0B,EAAAA,EAAAA,KAAA,OAAAD,UACEL,EAAAA,EAAAA,MAAA,SAAAK,SAAA,CAAO,YAELC,EAAAA,EAAAA,KAAA,SACErB,UAAQ,EACR0B,KAAK,WACLR,aAAa,mBACbS,KAAK,WACLC,SAAUxB,EAAOyB,aACjBC,MAAO1B,EAAOG,OAAOX,WAEtBQ,EAAO2B,OAAOnC,UAAYQ,EAAO4B,QAAQpC,UACxCyB,EAAAA,EAAAA,KAAA,QAAAD,SAAOhB,EAAO2B,OAAOnC,WACnB,WAIRyB,EAAAA,EAAAA,KAAA,UAAQK,KAAK,SAASO,SAAUrB,EAAWQ,SAAC,YAKlD,EC9EA,EAVc,WACZ,OACEC,EAAAA,EAAAA,KAAA,WAAAD,UACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACa,EAAS,OAIlB,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport { login } from '../../redux/auth/operations.js';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Email must be a valid email address')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .required('No password provided.')\n    .min(7, 'Password is too short - should be 8 chars minimum.'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit: (values, { resetForm }) => {\n      dispatch(login(values));\n      resetForm();\n    },\n    validationSchema: schema,\n  });\n\n  const isDisabled = !(formik.isValid && formik.dirty);\n  return (\n    <form\n      component=\"form\"\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={formik.handleSubmit}\n    >\n      <h3\n        style={{\n          marginBottom: '30px',\n          textAlign: 'center',\n          textTransform: 'uppercase',\n        }}\n      >\n        LOG IN\n      </h3>\n\n      <div>\n        <label>\n          EMAIL\n          <input\n            required\n            type=\"email\"\n            name=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n          />\n          {formik.errors.email && formik.touched.email ? (\n            <span>{formik.errors.email}</span>\n          ) : null}\n        </label>\n      </div>\n\n      <div>\n        <label>\n          PASSWORD\n          <input\n            required\n            type=\"password\"\n            autoComplete=\"current-password\"\n            name=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n          {formik.errors.password && formik.touched.password ? (\n            <span>{formik.errors.password}</span>\n          ) : null}\n        </label>\n      </div>\n\n      <button type=\"submit\" disabled={isDisabled}>\n        Login\n      </button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from '../components/LoginForm/LoginForm.jsx';\n\nconst Login = () => {\n  return (\n    <section>\n      <div>\n        <LoginForm />\n      </div>\n    </section>\n  );\n};\n\nexport default Login;\n"],"names":["initialValues","email","password","schema","yup","shape","required","min","dispatch","useDispatch","formik","useFormik","onSubmit","values","_ref","resetForm","login","validationSchema","isDisabled","isValid","dirty","_jsxs","component","noValidate","autoComplete","handleSubmit","children","_jsx","style","marginBottom","textAlign","textTransform","type","name","onChange","handleChange","value","errors","touched","disabled","LoginForm"],"sourceRoot":""}